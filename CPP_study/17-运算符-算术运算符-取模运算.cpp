
/*
	1 C++初识

	2 数据类型

	3 运算符

		作用：用于执行代码的运算

		本章我们主要讲解以下几类运算符：

			|   运算符类型   |   作用                                 |
			| -------------- | -------------------------------------- |
			| 算术运算符     | 用于处理四则运算                       |
			| 赋值运算符     | 用于将表达式的值赋给变量               |
			| 比较运算符     | 用于表达式的比较，并返回一个真值或假值 |
			| 逻辑运算符     | 用于根据表达式的值返回真值或假值       |

		3.1 算术运算符

			作用：用于处理四则运算

			算术运算符包括以下符号：

				|   运算符   |   术语     |   示例      |   结果    |
				| ---------- | ---------- | ----------- | --------- |
				| +          | 正号       | +3          | 3         |
				| -          | 负号       | -3          | -3        |
				| +          | 加         | 10 + 5      | 15        |
				| -          | 减         | 10 - 5      | 5         |
				| *          | 乘         | 10 * 5      | 50        |
				| /          | 除         | 10 / 5      | 2         |
				| %          | 取模(取余) | 10 % 3      | 1         |
				| ++         | 前置递增   | a=2; b=++a; | a=3; b=3; |
				| ++         | 后置递增   | a=2; b=a++; | a=3; b=2; |
				| --         | 前置递减   | a=2; b=--a; | a=1; b=1; |
				| --         | 后置递减   | a=2; b=a--; | a=1; b=2; |
*/

#include <iostream>

using namespace std;

void test1()
{
	//加减乘除

	int a1 = 10;
	int b1 = 3;

	cout << a1 + b1 << endl;
	cout << a1 - b1 << endl;
	cout << a1 * b1 << endl;
	cout << a1 / b1 << endl;  //两个整数相除结果依然是整数

	int a2 = 10;
	int b2 = 20;
	cout << a2 / b2 << endl;

	int a3 = 10;
	int b3 = 0;
	//cout << a3 / b3 << endl; //报错，除数不可以为0


	//两个小数可以相除
	double d1 = 0.5;
	double d2 = 0.25;
	cout << d1 / d2 << endl;

	// 总结：在除法运算中，除数不能为0
}

void test2()
{
	//取模

	int a1 = 10;
	int b1 = 3;

	cout << 10 % 3 << endl;

	int a2 = 10;
	int b2 = 20;

	cout << a2 % b2 << endl;

	int a3 = 10;
	int b3 = 0;

	//cout << a3 % b3 << endl; //取模运算时，除数也不能为0

	//两个小数不可以取模
	double d1 = 3.14;
	double d2 = 1.1;

	//cout << d1 % d2 << endl;

	// 总结：只有整型变量可以进行取模运算
}

void test3()
{
	//后置递增
	int a = 10;
	a++; //等价于a = a + 1
	cout << a << endl; // 11

	//前置递增
	int b = 10;
	++b;
	cout << b << endl; // 11

	//区别
	//前置递增先对变量进行++，再计算表达式
	int a2 = 10;
	int b2 = ++a2 * 10;
	cout << b2 << endl;

	//后置递增先计算表达式，后对变量进行++
	int a3 = 10;
	int b3 = a3++ * 10;
	cout << b3 << endl;

	// 总结：前置递增先对变量进行++，再计算表达式，后置递增相反
}

int main()
{
	//加减乘除
	test1();

	cout << "-------- -------- -------- --------" << endl;

	//取模
	test2();

	cout << "-------- -------- -------- --------" << endl;

	//递增
	test3();

	return 0;
}