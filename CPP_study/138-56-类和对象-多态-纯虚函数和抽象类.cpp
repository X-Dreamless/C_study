
/*
	第1阶段C++ 匠心之作 从0到1入门

	第2阶段实战-通讯录管理

	第3阶段-C++核心编程

		1 内存分区模型

		2 引用

		3 函数提高

		4 类和对象

			4.1 封装

			4.2 对象的初始化和清理

			4.3 C++对象模型和this指针

			4.4 友元

			4.5 运算符重载

			4.6 继承

			4.7 多态(多种形态)

				4.7.1 多态的基本概念

				多态的原理剖析

				4.7.2 多态案例一-计算器类

				4.7.3 纯虚函数和抽象类

					在多态中，通常父类中虚函数的实现是毫无意义的，主要都是调用子类重写的内容

					因此可以将虚函数改为纯虚函数

					纯虚函数语法：virtual 返回值类型 函数名 （参数列表）= 0 ;

					当类中有了纯虚函数，这个类也称为 抽象类

					抽象类特点：

						无法实例化对象，不管是栈上还是堆区
						子类必须重写抽象类中的纯虚函数，否则也属于抽象类

					父类中的 纯虚函数 就是让 子类 重写，否则写多态无意义
*/

#include <iostream>

using namespace std;

class Base
{
public:
	//纯虚函数
	//类中只要有一个纯虚函数就称为抽象类
	//抽象类无法实例化对象
	//子类必须重写父类中的纯虚函数，否则也属于抽象类
	virtual void func() = 0;
};

//子类必须重写父类中的纯虚函数，否则也属于抽象类
class Son2 :public Base {};

class Son :public Base
{
public:
	virtual void func()
	{
		cout << "func调用" << endl;
	};
};

void test01()
{
	//Base base;       // 错误，抽象类无法实例化对象
	//base = new Base; // 错误，抽象类无法实例化对象
	//Son2 s2;         // 子类必须重写父类中的纯虚函数，否则也属于抽象类

	Base* base = NULL;
	base = new Son;
	base->func();
	delete base;//记得销毁
}

int main()
{
	test01();

	return 0;
}

/*
	来自弹幕：不能做抽象的男孩，，，不然没对象啊，@贾杰
	来自弹幕：父债子还
*/