
/*
	第1阶段C++ 匠心之作 从0到1入门

	第2阶段实战-通讯录管理

		通讯录管理系统

			1、系统需求

				通讯录是一个可以记录亲人、好友信息的工具。

				本教程主要利用C++来实现一个通讯录管理系统

				系统中需要实现的功能如下：

					添加联系人：向通讯录中添加新人，信息包括（姓名、性别、年龄、联系电话、家庭住址）最多记录1000人
					显示联系人：显示通讯录中所有联系人信息
					删除联系人：按照姓名进行删除指定联系人
					查找联系人：按照姓名查看指定联系人信息
					修改联系人：按照姓名重新修改指定联系人
					清空联系人：清空通讯录中所有信息
					退出通讯录：退出当前使用的通讯录


			2、创建项目

				创建项目步骤如下：

					创建新项目
					添加文件


			3、菜单功能

				功能描述： 用户选择功能的界面

				菜单界面效果如下图：

					|*********************
					|**** 1 添加联系人 ****
					|**** 2 显示联系人 ****
					|**** 3 删除联系人 ****
					|**** 4 查找联系人 ****
					|**** 5 修改联系人 ****
					|**** 6 清空联系人 ****
					|**** 7 退出通讯录 ****
					|*********************

				步骤：
					封装函数显示该界面 如 void showMenu()
					在main函数中调用封装好的函数

				代码：

					#include<iostream>
					using namespace std;

					//菜单界面
					void showMenu()
					{
						cout << "***************************" << endl;
						cout << "*****  1、添加联系人  *****" << endl;
						cout << "*****  2、显示联系人  *****" << endl;
						cout << "*****  3、删除联系人  *****" << endl;
						cout << "*****  4、查找联系人  *****" << endl;
						cout << "*****  5、修改联系人  *****" << endl;
						cout << "*****  6、清空联系人  *****" << endl;
						cout << "*****  0、退出通讯录  *****" << endl;
						cout << "***************************" << endl;
					}

					int main() {

						showMenu();

						system("pause");

						return 0;
					}


			4、退出功能

				功能描述：退出通讯录系统

				思路：根据用户不同的选择，进入不同的功能，可以选择switch分支结构，将整个架构进行搭建

				当用户选择0时候，执行退出，选择其他先不做操作，也不会退出程序

				代码：

					int main() {

						int select = 0;

						while (true)
						{
							showMenu();

							cin >> select;

							switch (select)
							{
							case 1:  //添加联系人
								break;
							case 2:  //显示联系人
								break;
							case 3:  //删除联系人
								break;
							case 4:  //查找联系人
								break;
							case 5:  //修改联系人
								break;
							case 6:  //清空联系人
								break;
							case 0:  //退出通讯录
								cout << "欢迎下次使用" << endl;
								system("pause");
								return 0;
								break;
							default:
								break;
							}
						}

						system("pause");

						return 0;
					}
*/